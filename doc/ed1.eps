%!PS-Adobe-2.0
%%Title: ed1.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 21 13:45:15 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
574 280 M
63 0 V
6325 0 R
-63 0 V
490 280 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
574 1198 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
574 2117 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
574 3035 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
574 3954 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
574 4872 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
574 280 M
0 63 V
0 4529 R
0 -63 V
574 140 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1852 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.2) Cshow
grestore
1.000 UL
LTb
3129 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.4) Cshow
grestore
1.000 UL
LTb
4407 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.6) Cshow
grestore
1.000 UL
LTb
5684 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.8) Cshow
grestore
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
574 280 M
6388 0 V
0 4592 V
-6388 0 V
574 280 L
1.000 UP
1.000 UP
1.000 UL
LT0
3231 3576 Pls
2430 2829 Pls
3105 3493 Pls
3257 3592 Pls
3230 3512 Pls
3262 3595 Pls
2073 2595 Pls
2150 2626 Pls
3669 3749 Pls
2866 3405 Pls
2216 2543 Pls
2267 2631 Pls
2855 3406 Pls
2869 3421 Pls
2232 2402 Pls
2171 2500 Pls
2891 3397 Pls
3217 3583 Pls
2851 3406 Pls
1792 771 Pls
2255 2633 Pls
3674 3535 Pls
3433 3627 Pls
3405 3620 Pls
3604 3506 Pls
2851 3386 Pls
3201 3623 Pls
2820 3348 Pls
2862 3397 Pls
2877 3417 Pls
3530 2579 Pls
3211 3636 Pls
2887 3432 Pls
3578 2497 Pls
3328 3641 Pls
3357 3724 Pls
3481 2612 Pls
1538 856 Pls
1699 795 Pls
2192 2605 Pls
1566 2185 Pls
2296 2800 Pls
3527 2583 Pls
1754 2176 Pls
3219 3653 Pls
3473 2660 Pls
3441 3430 Pls
3496 2527 Pls
2353 2510 Pls
3436 3721 Pls
1727 2338 Pls
3560 3767 Pls
3594 2481 Pls
3316 3626 Pls
3285 3634 Pls
2609 2779 Pls
3268 3598 Pls
3343 3517 Pls
3163 3481 Pls
3484 3456 Pls
3126 3451 Pls
3334 2743 Pls
3235 3476 Pls
2190 2622 Pls
3206 3476 Pls
3354 3603 Pls
6177 4022 Pls
6200 4231 Pls
5646 1800 Pls
5642 1818 Pls
4054 935 Pls
3830 892 Pls
1780 766 Pls
1996 2444 Pls
1768 2476 Pls
2187 2805 Pls
1534 2499 Pls
3466 3497 Pls
2404 2802 Pls
2687 3316 Pls
2605 2729 Pls
3435 3525 Pls
3711 2494 Pls
1892 2530 Pls
3471 3627 Pls
3341 2772 Pls
3334 3539 Pls
3241 3650 Pls
3433 3447 Pls
3296 3571 Pls
2259 2456 Pls
2266 2631 Pls
3376 3502 Pls
2194 2440 Pls
2431 2572 Pls
3235 3531 Pls
3348 3591 Pls
2143 2587 Pls
3145 3503 Pls
2284 2385 Pls
3213 3534 Pls
3252 3573 Pls
3222 3556 Pls
3195 3541 Pls
6159 3935 Pls
6199 4238 Pls
6215 4021 Pls
6220 4040 Pls
4171 970 Pls
4146 942 Pls
2018 824 Pls
1618 853 Pls
5635 1796 Pls
5627 1798 Pls
3789 877 Pls
5528 1805 Pls
5545 1816 Pls
5789 2221 Pls
3972 903 Pls
1968 2434 Pls
2123 2566 Pls
2036 2791 Pls
2143 2817 Pls
1902 2801 Pls
3858 3498 Pls
1951 2678 Pls
3482 3357 Pls
3557 3438 Pls
1618 802 Pls
2289 2789 Pls
3328 3521 Pls
3555 3410 Pls
2325 2884 Pls
3569 3485 Pls
2416 2670 Pls
2653 2823 Pls
3176 3429 Pls
3318 3393 Pls
2761 3353 Pls
2898 3408 Pls
2887 3368 Pls
3502 3825 Pls
3470 3487 Pls
2929 3443 Pls
2589 2576 Pls
3524 2640 Pls
6143 3894 Pls
6120 3892 Pls
6178 4025 Pls
6185 4094 Pls
6145 3891 Pls
6106 3807 Pls
6159 4008 Pls
6208 4047 Pls
5656 1849 Pls
5645 1865 Pls
4162 977 Pls
1884 851 Pls
1917 830 Pls
3759 896 Pls
3774 876 Pls
3695 853 Pls
3639 846 Pls
3569 818 Pls
2047 816 Pls
3508 803 Pls
2153 808 Pls
5985 2363 Pls
2040 2676 Pls
2582 2807 Pls
3318 3306 Pls
2433 2782 Pls
3436 3445 Pls
2153 2715 Pls
2317 2871 Pls
3482 3494 Pls
2207 2517 Pls
3189 3501 Pls
3215 3566 Pls
3226 3584 Pls
2880 3395 Pls
3206 3489 Pls
3153 3496 Pls
3338 3624 Pls
2325 2500 Pls
2561 2526 Pls
3196 3532 Pls
3312 3615 Pls
5985 2577 Pls
6197 4026 Pls
5981 2438 Pls
6213 4027 Pls
6218 4338 Pls
5701 1946 Pls
5709 1885 Pls
5736 1860 Pls
3658 830 Pls
3580 796 Pls
1923 820 Pls
1916 802 Pls
1985 803 Pls
3617 853 Pls
5785 1856 Pls
5574 1821 Pls
5557 1815 Pls
5785 1896 Pls
1312 2127 Pls
1454 2410 Pls
1509 3707 Pls
1164 3995 Pls
3422 3613 Pls
2060 2665 Pls
1896 2770 Pls
2084 2836 Pls
2113 2822 Pls
2440 2893 Pls
2223 2884 Pls
3453 3408 Pls
3462 3373 Pls
3549 3450 Pls
1931 2718 Pls
3499 3446 Pls
2033 2761 Pls
3270 3566 Pls
3218 3639 Pls
3367 2791 Pls
3249 3560 Pls
2673 2751 Pls
3185 3566 Pls
2315 2793 Pls
3157 3537 Pls
3142 3546 Pls
3300 3724 Pls
3273 3627 Pls
3292 3521 Pls
2252 2834 Pls
1903 2531 Pls
2220 2934 Pls
3194 3548 Pls
2660 2908 Pls
2099 2809 Pls
2850 3400 Pls
2678 2910 Pls
2796 3369 Pls
3181 3551 Pls
2598 2737 Pls
3269 3648 Pls
3336 3754 Pls
3510 2644 Pls
2878 3386 Pls
3314 3588 Pls
3210 3607 Pls
6222 4059 Pls
6215 3919 Pls
6180 3877 Pls
6214 3992 Pls
6223 4032 Pls
6210 3906 Pls
6181 3836 Pls
6224 4017 Pls
6211 3854 Pls
6155 3849 Pls
6145 3793 Pls
6149 3788 Pls
6105 3843 Pls
6161 3944 Pls
6134 3923 Pls
6140 3912 Pls
6240 3929 Pls
6243 3942 Pls
6266 4028 Pls
6239 4366 Pls
6232 4333 Pls
5709 1911 Pls
5663 1968 Pls
5723 1928 Pls
5734 1924 Pls
5703 2041 Pls
1922 822 Pls
1842 798 Pls
3693 844 Pls
3535 813 Pls
3630 830 Pls
3741 888 Pls
3618 847 Pls
3519 808 Pls
3495 816 Pls
3491 815 Pls
1993 813 Pls
2070 808 Pls
2053 793 Pls
3502 810 Pls
3408 775 Pls
5797 1866 Pls
5790 1859 Pls
5549 1791 Pls
5573 1841 Pls
5538 1837 Pls
1.000 UL
LTb
574 280 M
6388 0 V
0 4592 V
-6388 0 V
574 280 L
1.000 UP
stroke
grestore
end
showpage

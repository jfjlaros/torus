%!PS-Adobe-2.0
%%Title: ed2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 21 15:48:38 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
574 280 M
63 0 V
6325 0 R
-63 0 V
490 280 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
574 1198 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
574 2117 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
574 3035 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
574 3954 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
574 4872 M
63 0 V
6325 0 R
-63 0 V
-6409 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
574 280 M
0 63 V
0 4529 R
0 -63 V
574 140 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
1852 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.2) Cshow
grestore
1.000 UL
LTb
3129 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.4) Cshow
grestore
1.000 UL
LTb
4407 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.6) Cshow
grestore
1.000 UL
LTb
5684 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 0.8) Cshow
grestore
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
574 280 M
6388 0 V
0 4592 V
-6388 0 V
574 280 L
1.000 UP
1.000 UP
1.000 UL
LT0
4725 2088 Pls
4322 1965 Pls
4704 2252 Pls
4701 2087 Pls
4566 2060 Pls
4732 2146 Pls
4090 2279 Pls
4155 2280 Pls
4066 2662 Pls
4647 2213 Pls
4292 2408 Pls
4274 2266 Pls
4690 2211 Pls
4726 2184 Pls
4643 2568 Pls
4864 2420 Pls
4503 2109 Pls
4733 2126 Pls
4834 2226 Pls
4626 3458 Pls
4266 2296 Pls
4879 2315 Pls
4784 2359 Pls
4817 2282 Pls
3956 1847 Pls
4455 1942 Pls
4808 2140 Pls
4482 1982 Pls
4677 2076 Pls
4728 2148 Pls
4105 2476 Pls
4831 2228 Pls
4714 2225 Pls
4198 2581 Pls
4735 2243 Pls
4846 2247 Pls
4318 2477 Pls
3690 3472 Pls
3491 2873 Pls
4240 2324 Pls
3730 2699 Pls
4232 1917 Pls
4080 2460 Pls
3983 2742 Pls
4838 2165 Pls
4234 2404 Pls
4288 1933 Pls
4305 2576 Pls
4770 2417 Pls
4204 1845 Pls
3797 2514 Pls
4901 2587 Pls
4964 2637 Pls
4724 2157 Pls
4766 2187 Pls
4515 2158 Pls
4737 2197 Pls
4808 2258 Pls
4566 2161 Pls
4181 1918 Pls
4594 2166 Pls
4724 2300 Pls
4402 2176 Pls
4195 2303 Pls
4545 2055 Pls
4830 2317 Pls
2532 2600 Pls
2433 2611 Pls
3264 3490 Pls
3229 3475 Pls
3967 3538 Pls
4312 3455 Pls
4639 3446 Pls
4047 2465 Pls
3755 2357 Pls
4072 1856 Pls
4867 2772 Pls
4172 1927 Pls
4203 1919 Pls
4173 1819 Pls
4319 2289 Pls
4451 1887 Pls
4986 2634 Pls
3877 2321 Pls
4186 2256 Pls
4413 2254 Pls
4343 1900 Pls
4842 2188 Pls
4339 1897 Pls
4674 2154 Pls
4417 2459 Pls
4277 2304 Pls
4427 1963 Pls
4296 2505 Pls
4730 2405 Pls
4651 2177 Pls
4513 2151 Pls
4134 2261 Pls
4680 2072 Pls
4690 2562 Pls
4653 2206 Pls
4708 2237 Pls
4708 2162 Pls
4674 2040 Pls
2722 2115 Pls
2434 2570 Pls
2527 2570 Pls
2516 2570 Pls
3507 3448 Pls
3639 3489 Pls
4716 3280 Pls
3965 3500 Pls
3305 3499 Pls
3262 3496 Pls
4432 3533 Pls
3449 3550 Pls
3372 3522 Pls
3047 3092 Pls
3235 3008 Pls
3990 2453 Pls
4078 2323 Pls
3927 1842 Pls
4019 1862 Pls
3819 1781 Pls
4770 2456 Pls
3881 1778 Pls
4155 1841 Pls
4153 1813 Pls
3437 2941 Pls
4149 1936 Pls
4357 1915 Pls
4108 1839 Pls
4196 1902 Pls
4179 1836 Pls
4375 2284 Pls
4487 2102 Pls
4300 1923 Pls
4414 1919 Pls
4447 1908 Pls
4774 2200 Pls
4653 2078 Pls
4994 2447 Pls
4334 1894 Pls
4694 2082 Pls
4884 2375 Pls
4955 2376 Pls
2709 2188 Pls
2639 2458 Pls
2504 2481 Pls
2471 2349 Pls
2702 2211 Pls
2854 2125 Pls
2546 2544 Pls
2524 2454 Pls
3205 3440 Pls
3192 3433 Pls
3542 3454 Pls
4446 3381 Pls
4553 3367 Pls
4293 3404 Pls
4455 3399 Pls
4483 3349 Pls
4500 3356 Pls
4604 3334 Pls
4690 3270 Pls
4616 3283 Pls
4716 3237 Pls
2400 2391 Pls
3905 1925 Pls
4181 1935 Pls
4285 1865 Pls
4236 1990 Pls
4222 1878 Pls
3995 1923 Pls
4178 1874 Pls
4193 1825 Pls
4918 2341 Pls
4617 1987 Pls
4742 2097 Pls
4801 2105 Pls
4694 2072 Pls
4588 2029 Pls
4536 1959 Pls
4760 2134 Pls
4917 2373 Pls
4944 2385 Pls
4679 2029 Pls
4890 2213 Pls
2557 2593 Pls
2476 2546 Pls
2540 2843 Pls
2496 2646 Pls
2361 2628 Pls
3380 3407 Pls
3080 3404 Pls
3032 3433 Pls
4566 3345 Pls
4656 3304 Pls
4569 3342 Pls
4625 3349 Pls
4706 3263 Pls
4415 3338 Pls
2841 3365 Pls
3312 3517 Pls
3355 3531 Pls
2790 3330 Pls
3475 2752 Pls
3488 2423 Pls
3374 1888 Pls
3073 1860 Pls
4161 1817 Pls
4004 2148 Pls
3846 1775 Pls
3998 1766 Pls
4015 1874 Pls
4268 1876 Pls
4107 1812 Pls
4243 1827 Pls
4170 1804 Pls
4146 1801 Pls
3866 1789 Pls
4165 1821 Pls
3953 1836 Pls
4368 1857 Pls
4830 2165 Pls
4853 2115 Pls
4406 1901 Pls
4905 2228 Pls
4742 2177 Pls
4249 1963 Pls
4696 2031 Pls
4707 2050 Pls
4905 2242 Pls
4813 2198 Pls
4393 1944 Pls
4153 1872 Pls
3923 2351 Pls
4075 1808 Pls
4499 1938 Pls
4210 1855 Pls
4001 1881 Pls
4431 1902 Pls
4316 1863 Pls
4439 1894 Pls
4649 1991 Pls
4829 2216 Pls
4811 2097 Pls
4916 2241 Pls
5000 2334 Pls
4679 2097 Pls
4815 2096 Pls
4795 2105 Pls
2432 2422 Pls
2545 2186 Pls
2561 2407 Pls
2478 2395 Pls
2455 2346 Pls
2648 2040 Pls
2623 2248 Pls
2508 2228 Pls
2621 2179 Pls
2829 2017 Pls
2931 1960 Pls
2942 1942 Pls
2804 2150 Pls
2594 2268 Pls
2629 2256 Pls
2640 2224 Pls
2582 2215 Pls
2491 2661 Pls
2428 2539 Pls
2333 2595 Pls
2325 2472 Pls
3056 3382 Pls
3246 3392 Pls
3001 3364 Pls
2959 3355 Pls
3198 3360 Pls
4643 3343 Pls
4510 3431 Pls
4487 3358 Pls
4597 3322 Pls
4471 3392 Pls
4465 3432 Pls
4584 3344 Pls
4611 3326 Pls
4546 3355 Pls
4555 3332 Pls
4645 3319 Pls
4707 3275 Pls
4792 3222 Pls
4569 3287 Pls
4715 3224 Pls
2842 3374 Pls
2850 3379 Pls
3408 3572 Pls
3397 3550 Pls
3454 3553 Pls
1.000 UL
LTb
574 280 M
6388 0 V
0 4592 V
-6388 0 V
574 280 L
1.000 UP
stroke
grestore
end
showpage
